"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const archiver = require("archiver");
const axios_1 = require("axios");
const env_1 = require("./env");
const routes = {
    Publish: '_v/publish',
};
class Builder {
    constructor(opts) {
        this.prePublishApp = (files) => {
            if (!(files[0] && files[0].path && files[0].content)) {
                throw new Error('Argument files must be an array of {path, content}, where content can be a String, a Buffer or a ReadableStream.');
            }
            const indexOfManifest = files.findIndex(({ path }) => path === 'manifest.json');
            if (indexOfManifest === -1) {
                throw new Error('No manifest.json file found in files.');
            }
            const archive = archiver('zip');
            files.forEach(({ content, path }) => archive.append(content, { name: path }));
            archive.finalize();
            return this.http.post(routes.Publish, archive, {
                params: {},
                headers: { 'Content-Type': 'application/octet-stream' },
            });
        };
        const { account, workspace } = opts;
        this.http = axios_1.default.create({
            baseURL: `http://${workspace}--${account}.${env_1.publicEndpoint()}`,
            headers: {
                'User-Agent': 'vtex.toolbelt',
            },
            validateStatus: status => (status >= 200 && status < 300) || status === 304,
        });
    }
}
exports.Builder = Builder;
