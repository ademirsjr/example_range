"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("@vtex/api");
const ramda_1 = require("ramda");
const isNpm = dep => dep.startsWith('npm:');
exports.removeNpm = (deps, inValues) => {
    Object.keys(deps).forEach(key => {
        if (isNpm(key)) {
            return delete deps[key];
        }
        if (inValues) {
            deps[key] = deps[key].filter(d => !isNpm(d));
        }
    });
    return deps;
};
const cleanDeps = ramda_1.compose(ramda_1.keys, exports.removeNpm);
exports.getCleanDependencies = (context) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield new api_1.Apps(context).getDependencies().then(cleanDeps));
});
