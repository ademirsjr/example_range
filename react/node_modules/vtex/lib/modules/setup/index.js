"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const manifest_1 = require("../../manifest");
const setupESLint_1 = require("./setupESLint");
const setupTSConfig_1 = require("./setupTSConfig");
const setupTypings_1 = require("./setupTypings");
const buildersToAddAdditionalPackages = ['react', 'node'];
const buildersToAddTypes = ['react', 'node'];
exports.default = (opts) => __awaiter(void 0, void 0, void 0, function* () {
    const ignoreLinked = opts.i || opts['ignore-linked'];
    const manifest = yield manifest_1.getManifest();
    setupESLint_1.setupESLint(manifest, buildersToAddAdditionalPackages);
    yield setupTSConfig_1.setupTSConfig(manifest);
    yield setupTypings_1.setupTypings(manifest, ignoreLinked, buildersToAddTypes);
});
