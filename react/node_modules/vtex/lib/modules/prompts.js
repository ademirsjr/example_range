"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Confirm = require("prompt-confirm");
// Prompt definitions that are used in many modules of this project.
exports.promptConfirm = (message, initial = true) => __awaiter(void 0, void 0, void 0, function* () {
    const initialMode = process.stdin.isRaw;
    const isStdinTTY = process.stdin.isTTY;
    if (isStdinTTY)
        process.stdin.setRawMode(true);
    const ret = yield new Confirm({ message, default: initial }).run();
    if (isStdinTTY)
        process.stdin.setRawMode(initialMode);
    return ret;
});
