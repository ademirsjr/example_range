"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = require("chalk");
const clients_1 = require("../../clients");
const conf_1 = require("../../conf");
const logger_1 = require("../../logger");
const workspaceState = (meta) => (meta.production ? 'production' : 'dev');
exports.default = (name) => __awaiter(void 0, void 0, void 0, function* () {
    const account = conf_1.getAccount();
    const workspace = name || conf_1.getWorkspace();
    const meta = yield clients_1.workspaces.get(account, workspace);
    logger_1.default.info(`Workspace ${chalk_1.default.green(workspace)} in account ${chalk_1.default.blue(account)} is a ${chalk_1.default.yellowBright(workspaceState(meta))} workspace with weight ${chalk_1.default.yellowBright(`${meta.weight}`)}`);
});
